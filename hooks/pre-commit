#!/bin/sh

#
# Decorative log helpers.
#
p_fail () {
	printf "[\033[0;31mFAIL\033[0m] $1\n"
}

#
# Get the root path of the git repository.
#
WORKING_DIR=$(git rev-parse --show-toplevel)

#
# Patterns we need later on for grep and other commands.
#
CHANGED_JS_FILES=$(git diff --cached --name-only -- '*.js')

#
# Check for changes in JavaScript files, and run the configured linter against them.
#
if [ ! -z "$CHANGED_JS_FILES" ]; then
	# Check for an existing pipe instance beforehand.
	if [ -f "$WORKING_DIR/Pipefile.js" ] || [ -f "$WORKING_DIR/pipefile.js" ]; then
		echo "Hook CLI: Found changes in JavaScript files. Linting via the pipe task-runner..."
		pipe lint:scripts
	fi
fi
lintResults=$?

#
# Exit with an error code if the linter has found errors.
# ToDo: Additional feedback for the developer
#
if [ $lintResults -ne 0 ]; then
	p_fail "Something went wrong while linting the changed files. Fix the errors and commit again."

	exit 1
fi

exit 0
