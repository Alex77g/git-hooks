#!/usr/bin/env bash

#
# Pre-Commit hook
# Responsible for linting the changed files.
#
# Author: Tyll Wei√ü <weiss@sitegeist.de>
#
HOOK_DIR="$HOME/.sitegeist-hooks"
WORKING_DIR=$(git rev-parse --show-toplevel)
CHANGED_JS_FILES=$(git diff --cached --name-only -- '*.js')
CHANGED_PACKAGE_JSON=$(git diff --cached --name-only -- 'package.json')
CONFIG_PATH="$WORKING_DIR/.hook.yml"
XO_BINARY_BASE_BATH="node_modules/.bin/xo"

#
# Include helper utils.
#
source $HOOK_DIR/utils/typography
source $HOOK_DIR/utils/fileExists
source $HOOK_DIR/utils/executeHookExtension
source $HOOK_DIR/utils/parseYaml

#
# Parse the config file, if existing.
#
if fileExists $CONFIG_PATH; then
	eval $(parseYaml $CONFIG_PATH "CONFIG_")
fi

#
# Get the xo linter binary location from the users config.
#
if [ -z "$CONFIG_lint_xo" ]; then
	XO_BINARY="$WORKING_DIR/$XO_BINARY_BASE_BATH"
else
	XO_BINARY="$WORKING_DIR/$CONFIG_lint_xo/$XO_BINARY_BASE_BATH"
fi

#
# Check for changes in JavaScript files, and run the configured linter against them.
#
if [ ! -z "$CHANGED_JS_FILES" ]; then
	p_info "Hook CLI: Found changes in JavaScript files. Linting via the local 'xo' binary..."

	echo "$XO_BINARY"
	echo "$CONFIG_PATH"
	if [ -f "$XO_BINARY" ]; then
		#
		# If a custom location for the xo binary was set,
		# `cd` into the main directory since we want to use the config placed in that directory.
		#
		if [ ! -z "$CONFIG_lint_xo" ]; then
			cd "$WORKING_DIR/$CONFIG_lint_xo"
		fi

		#
		# Lint the changed .js files.
		#
		node "node_modules/.bin/xo" $CHANGED_JS_FILES
		lintResults=$?

		#
		# Change back into the root directory.
		#
		cd "$WORKING_DIR"

		#
		# Exit with an error code if one of the linters has found errors.
		#
		if [ $lintResults -ne 0 ]; then
			p_fail "Something went wrong while linting the changed files.
       Fix the errors and commit again.

       If you think the linter is not intended to throw an error exit code,
       please contact the owner of the repository."

			exit 1
		else
			p_success "Continuing..."
		fi
	else
		p_warn "Hook CLI: No local 'xo' binary found."
	fi
fi

#
# Generate/Update the npm-shrinkwrap.json file, if a package.json file has been changed.
#
if [ ! -z "$CHANGED_PACKAGE_JSON" ]; then
	p_info "Hook CLI: Seems like you've changed a 'pacakge.json' file, creating/updating a 'npm-shrinkwrap.json' for consistent dependencies..."

	# --dev is set to include devDependencies.
	npm shrinkwrap --dev
	generateResults=$?

	# Add the generated file to the commit index.
	git add npm-shrinkwrap.json

	#
	# Exit with an error code if the npm shrinkwrap command aborted.
	#
	if [ $generateResults -ne 0 ]; then
		p_fail "Seems like something went wrong while creating the npm-shrinkwrap file.

	       If this error is thrown falsely, please open a issue at ${underline}https://github.com/sitegeist/git-hooks/issues${nounderline}."

		exit 1
	fi
fi

#
# Support for additional project specific hooks.
#
executeHookExtension "pre-commit" $CONFIG_extend_pre_commit $@

exit 0
