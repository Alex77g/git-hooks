#!/bin/sh

#
# sitegeist/git-hooks
#
# The global hook CLI.
#
# Authors: Tyll Wei√ü <weiss@sitegeist.de>
#

#
# A set of helper classes.
#
p_success () {
	printf "[ \033[00;32mOK\033[0m ] $1\n"
}
p_info () {
	printf "[\033[1;36m .. \033[0m] $1\n"
}
p_warn () {
	printf "[\033[0;33mWARN\033[0m] $1\n"
}
p_fail () {
	printf "[\033[0;31mFAIL\033[0m] $1\n"
}
p_help() {
	printf "[\033[0;33m ? \033[0m] $1\n"
}

#
# Print the usage help
#
print_help() {
	p_help "Usage: cd into your target directory which contains your local .git/ repository and run hook."
}

#
# Self-Update mechanism.
#
update__hooks() {
	p_info "Updating the git-hooks..."

	cd "$HOME/.sitegeist-hooks/" && git pull origin master && cd
}

#
# Install the git-hooks if the current pwd has a .git/ dir.
#
install_hooks() {
	if [ "$(ls -R 2>/dev/null -A `pwd`/.git)" ]; then
		p_info "Installing git hooks in the current working directory."

		HOOKS=("$HOME/.sitegeist-hooks/hooks/"*)
		for f in "${HOOKS[@]}"
		do
			if [ -f "`pwd`/.git/hooks/$(basename $f)" ]; then
				p_warn "Skipping hook '$(basename $f)' because it's already in place."
			else
				p_info "Linking $(basename $f) to `pwd`/.git/hooks/..."
				ln -s ${f} `pwd`/.git/hooks/
			fi
		done

		p_success "Done."
	else
		p_fail "Fatal Error: Your current directory has no '.git/' folder, please change into your root package directory and run this command again."

		exit 1
	fi
}

#
# Automatically update the hooks every 30 days.
#
if test `find "$HOME/.sitegeist-hooks/.last_modified" -mmin +43200`
then
    update__hooks
fi

#
# Depending on the passed argument, either print the usage guidelines, update the hooks or install them.
#
if [ $# -eq 0 ]
  then
    install_hooks
	else
		case "$1" in
			"--help" | "-h" | "help")
				print_help
				;;
			"self-update")
				update__hooks
				;;
			*)
				p_fail "Fatal Error: Unknown argument '$1'. \n       For help regarding the Hook CLI execute 'hook --help'."

				exit 1
				;;
		esac
fi

exit 0
